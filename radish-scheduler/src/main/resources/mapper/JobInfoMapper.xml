<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Mapper接口 -->
<mapper namespace="org.sam.shen.scheduing.mapper.JobInfoMapper">
    <resultMap type="JobInfo" id="jobInfoMap">
        <result column="id" property="id"/>
        <result column="job_name" property="jobName"/>
        <result column="crontab" property="crontab"/>
        <result column="handler_type" property="handlerType"/>
        <result column="handler_fail_strategy" property="handlerFailStrategy"/>
        <result column="admin" property="admin"/>
        <result column="admin_email" property="adminEmail"/>
        <result column="admin_phone" property="adminPhone"/>
        <result column="executor_handlers" property="executorHandlers"/>
        <result column="cmd" property="cmd"/>
        <result column="params" property="params"/>
        <result column="param_file_path" property="paramFilePath"/>
        <result column="parent_job_id" property="parentJobId"/>
        <result column="dist_type" property="distType"/>
        <result column="dist_rule" property="distRule"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="priority" property="priority"/>
        <result column="enable" property="enable"/>
        <result column="user_id" property="userId"/>
        <result column="expired" property="expired"/>
    </resultMap>

	<insert id="saveJobInfo" parameterType="JobInfo" useGeneratedKeys="true" keyProperty="id">
	    <![CDATA[
            INSERT INTO job_info(job_name, crontab, handler_type, handler_fail_strategy, admin, admin_email, admin_phone,
                        executor_handlers, cmd, params, param_file_path, parent_job_id, dist_type, dist_rule, create_time, update_time,
                        priority, enable, user_id, expired)
            VALUES (#{jobName}, #{crontab}, #{handlerType}, #{handlerFailStrategy}, #{admin}, #{adminEmail}, #{adminPhone},
                    #{executorHandlers}, #{cmd}, #{params}, #{paramFilePath}, #{parentJobId}, #{distType}, #{distRule}, #{createTime},
                    #{updateTime}, #{priority}, #{enable}, #{userId}, #{expired})
        ]]>
    </insert>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO job_info(job_name, crontab, handler_type, handler_fail_strategy, admin, admin_email, admin_phone,
                        executor_handlers, cmd, params, param_file_path, parent_job_id, dist_type, dist_rule, create_time, update_time,
                        priority, enable, user_id, expired) VALUES
        ]]>
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.jobName}, #{item.crontab}, #{item.handlerType}, #{item.handlerFailStrategy}, #{item.admin}, #{item.adminEmail},
            #{item.adminPhone}, #{item.executorHandlers}, #{item.cmd}, #{item.params}, #{item.paramFilePath}, #{item.parentJobId},
            #{item.distType}, #{item.distRule}, #{item.createTime}, #{item.updateTime}, #{item.priority}, #{item.enable}, #{item.userId}, #{item.expired})
        </foreach>
    </insert>
    
    <sql id="Base_Column_List">
        id, job_name, crontab, handler_type, handler_fail_strategy, admin, admin_email, admin_phone, executor_handlers,
        cmd, params, param_file_path, parent_job_id, dist_type, dist_rule, create_time,update_time, priority, enable,
        user_id, expired
    </sql>

    <select id="findJobInfoById" resultMap="jobInfoMap" parameterType="long">
        SELECT <include refid="Base_Column_List"/> FROM job_info WHERE id = #{id}
    </select>

    <select id="queryJobInfoForPager" resultMap="jobInfoMap" parameterType="string">
        SELECT <include refid="Base_Column_List"/> FROM job_info
        <where>
            <if test="jobName != null">job_name LIKE CONCAT(#{jobName}, '%')</if>
            <if test="userId != null">AND user_id = #{userId}</if>
        </where>

    </select>

    <select id="queryJobInfoForList" resultMap="jobInfoMap" parameterType="string">
        SELECT <include refid="Base_Column_List"/> FROM job_info
        <where>
            <if test="jobName != null">job_name LIKE CONCAT(#{jobName}, '%')</if>
            <if test="userId != null">AND user_id = #{userId}</if>
        </where>
    </select>

    <select id="queryJobInfoInIds" parameterType="list" resultMap="jobInfoMap">
        SELECT <include refid="Base_Column_List"/> FROM job_info
        WHERE id IN
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="userId != null"> AND user_id = #{userId}</if>
    </select>

    <update id="upgradeJonInfo" parameterType="JobInfo">
	    <![CDATA[
            UPDATE job_info
            SET job_name = #{jobName}, crontab = #{crontab}, handler_type = #{handlerType}, handler_fail_strategy = #{handlerFailStrategy},
                admin = #{admin}, admin_phone = #{adminPhone}, admin_email = #{adminEmail}, executor_handlers = #{executorHandlers},
                cmd = #{cmd}, params = #{params}, param_file_path = #{paramFilePath}, parent_job_id = #{parentJobId},
                dist_type = #{distType}, dist_rule = #{distRule}, update_time = #{updateTime}, priority = #{priority},
                enable = #{enable}, expired = #{expired}
            WHERE id = #{id}
	    ]]>
    </update>

    <select id="queryJobInfoByEnable" resultMap="jobInfoMap">
        SELECT <include refid="Base_Column_List"/> FROM job_info WHERE enable = #{enable}
        <if test="userId != null"> AND user_id = #{userId}</if>
    </select>

    <select id="countJobInfoByEnable" resultType="int">
        SELECT COUNT(*) FROM job_info WHERE enable = #{enable}
        <if test="userId != null"> AND user_id = #{userId}</if>
    </select>

    <select id="findJobInfoByParentId" parameterType="string" resultMap="jobInfoMap">
        SELECT <include refid="Base_Column_List"/>
        FROM job_info
        WHERE parent_job_id = #{jobId} AND enable = 1
    </select>

    <select id="queryLoadedJobs" parameterType="string" resultMap="jobInfoMap">
        SELECT <include refid="Base_Column_List"/>
        <![CDATA[
            FROM job_info
            WHERE crontab is NOT NULL AND crontab <> '' AND enable = 1
        ]]>
    </select>

    <delete id="deleteJobById" parameterType="java.lang.Long">
        <![CDATA[
            DELETE FROM job_info WHERE id = #{jobId}
        ]]>
    </delete>

    <!-- job information and associated app information -->
    <resultMap id="JobAppMap" type="org.sam.shen.scheduing.vo.JobApiVo" extends="jobInfoMap">
        <result column="ref_id" property="refId"/>
        <result column="app_id" property="appId"/>
    </resultMap>

    <select id="findJobAppById" parameterType="java.lang.Long" resultMap="JobAppMap">
        <![CDATA[
            SELECT a.id, a.job_name, a.crontab, a.handler_type, a.handler_fail_strategy, a.admin, a.admin_email, a.admin_phone,
                   a.executor_handlers, a.cmd, a.params, a.param_file_path, a.parent_job_id, a.dist_type, a.dist_rule, a.create_time,
                   a.update_time, a.priority, a.enable, a.expired, b.id as ref_id, b.app_id
            FROM job_info a, job_app_ref b
            WHERE a.id = b.job_id AND a.id = #{jobId}
        ]]>
    </select>

    <select id="findJobsByAppId" parameterType="java.lang.String" resultMap="jobInfoMap">
        <![CDATA[
            SELECT a.id, a.job_name, a.crontab, a.handler_type, a.handler_fail_strategy, a.admin, a.admin_email, a.admin_phone,
                   a.executor_handlers, a.cmd, a.params, a.param_file_path, a.parent_job_id, a.dist_type, a.dist_rule, a.create_time,
                   a.update_time, a.priority, a.enable, a.expired
            FROM job_info a, job_app_ref b
            WHERE a.id = b.job_id AND b.app_id = #{appId}
        ]]>
    </select>
    
</mapper>