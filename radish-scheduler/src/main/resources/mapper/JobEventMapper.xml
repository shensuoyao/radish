<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Mapper接口 -->
<mapper namespace="org.sam.shen.scheduing.mapper.JobEventMapper">
    <resultMap type="org.sam.shen.scheduing.entity.JobEvent" id="jobEventMap">
        <result column="event_id" property="eventId"/>
        <result column="parent_event_id" property="parentEventId"/>
        <result column="group_id" property="groupId"/>
        <result column="parent_group_id" property="parentGroupId"/>
        <result column="job_id" property="jobId"/>
        <result column="parent_job_id" property="parentJobId"/>
        <result column="executor_handlers" property="executorHandlers"/>
        <result column="handler_type" property="handlerType"/>
        <result column="cmd" property="cmd"/>
        <result column="params" property="params"/>
        <result column="param_file_path" property="paramFilePath"/>
        <result column="stat" property="stat"/>
        <result column="handler_agent_id" property="handlerAgentId"/>
        <result column="priority" property="priority"/>
        <result column="retry_count" property="retryCount"/>
        <result column="create_time" property="createTime"/>
        <result column="handler_log_path" property="handlerLogPath"/>
        <result column="dist_type" property="distType"/>
        <result column="event_rule" property="eventRule"/>
    </resultMap>

    <resultMap id="JobEventVoMap" type="org.sam.shen.scheduing.vo.JobEventVo">
        <association property="jobEvent" resultMap="jobEventMap"/>
        <association property="jobInfo" resultMap="org.sam.shen.scheduing.mapper.JobInfoMapper.jobInfoMap"/>
    </resultMap>

    <resultMap id="JobEventPageVoMap" type="org.sam.shen.scheduing.vo.JobEventPageVo" extends="jobEventMap">
        <result column="job_name" property="jobName"/>
    </resultMap>

    <insert id="saveJobEvent" parameterType="JobEvent">
        <![CDATA[
            INSERT INTO job_event(event_id, parent_event_id, job_id, parent_job_id, group_id, parent_group_id,
                                  executor_handlers, handler_type, cmd, params, param_file_path, stat, handler_agent_id, priority,
                                  retry_count, create_time, dist_type, event_rule)
            VALUES (#{eventId}, #{parentEventId}, #{jobId}, #{parentJobId}, #{groupId}, #{parentGroupId}, #{executorHandlers},
                    #{handlerType}, #{cmd}, #{params}, #{paramFilePath}, #{stat}, #{handlerAgentId}, #{priority}, #{retryCount},
                    #{createTime}, #{distType}, #{eventRule})
        ]]>
    </insert>

    <insert id="batchInsert" parameterType="List">
        <![CDATA[
            INSERT INTO job_event(event_id, parent_event_id, job_id, parent_job_id, group_id, parent_group_id,
                        executor_handlers, handler_type, cmd, params, param_file_path, stat, handler_agent_id, priority, retry_count,
                        create_time,  dist_type, event_rule)
            VALUES
        ]]>
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.eventId}, #{item.parentEventId}, #{item.jobId}, #{item.parentJobId}, #{item.groupId}, #{item.parentGroupId},
            #{item.executorHandlers}, #{item.handlerType}, #{item.cmd}, #{item.params}, #{item.paramFilePath}, #{item.stat},
            #{item.handlerAgentId}, #{item.priority}, #{item.retryCount}, #{item.createTime}, #{item.distType}, #{item.eventRule})
        </foreach>
    </insert>

    <select id="countJobEventInJobIds" parameterType="list" resultType="int">
        <![CDATA[
            SELECT count(*)
            FROM job_event
            WHERE job_id IN
        ]]>
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <update id="upgradeJobEvent" parameterType="JobEvent">
        <![CDATA[
            UPDATE job_event SET stat = #{stat}, retry_count = #{retryCount}
        ]]>
        <if test="handlerAgentId != null">
            <![CDATA[, handler_agent_id = #{handlerAgentId} ]]>
        </if>
        <if test="handlerLogPath != null">
            <![CDATA[, handler_log_path = #{handlerLogPath}]]>
        </if>
        <where>
            <![CDATA[ event_id = #{eventId} ]]>
        </where>
    </update>

    <select id="findJobEventByEventId" parameterType="string" resultMap="jobEventMap">
        <![CDATA[
            SELECT event_id, parent_event_id, job_id, parent_job_id, group_id, parent_group_id, executor_handlers,
                   handler_type, cmd, params, param_file_path, stat, handler_agent_id, priority, retry_count, create_time, handler_log_path,
                   dist_type, event_rule
            FROM job_event
            WHERE event_id = #{eventId}
        ]]>
    </select>

    <select id="queryJobEventForPager" resultMap="JobEventPageVoMap" parameterType="string">
        <![CDATA[
            SELECT a.event_id, a.parent_event_id, a.job_id, a.parent_job_id, a.group_id, a.parent_group_id, a.executor_handlers,
                   a.handler_type, a.cmd, a.params, a.param_file_path, a.stat, a.handler_agent_id, a.priority, a.retry_count,
                   a.create_time, a.handler_log_path, a.dist_type, a.event_rule, b.job_name
            FROM job_event a, job_info b
            WHERE a.job_id = b.id
        ]]>
        <if test="stat != null"> AND a.stat = #{stat}</if>
        <if test="userId != null"> AND b.user_id = #{userId}</if>
        <![CDATA[  ORDER BY a.create_time DESC ]]>
    </select>

    <select id="countJobEventByStat" parameterType="string" resultType="int">
        <![CDATA[
            SELECT count(a.event_id) FROM job_event a, job_info b WHERE a.job_id = b.id
        ]]>
        <if test="stat != null"> AND a.stat = #{stat}</if>
        <if test="userId != null"> AND b.user_id = #{userId}</if>
    </select>

    <select id="queryJobEventByJobId" parameterType="long" resultMap="jobEventMap">
        <![CDATA[
            SELECT a.event_id, a.parent_event_id, a.job_id, a.parent_job_id, a.executor_handlers, a.group_id, a.parent_group_id,
                   a.handler_type, a.cmd, a.params, a.param_file_path, a.stat, a.handler_agent_id, a.priority, a.retry_count, a.create_time,
                   a.handler_log_path, a.dist_type, a.event_rule
            FROM job_event a, job_info b
            WHERE a.job_id=b.id AND a.stat<>'SUCCESS' AND a.stat<>'FAIL' AND a.stat <> 'EXPIRED' AND a.job_id=#{jobId}
        ]]>
    </select>

    <select id="findJobEventVoById" parameterType="string" resultMap="JobEventVoMap">
        <![CDATA[
            SELECT a.event_id, a.parent_event_id, a.job_id, a.parent_job_id, a.group_id, a.parent_group_id, a.executor_handlers,
                   a.handler_type, a.cmd, a.params, a.param_file_path, a.stat, a.handler_agent_id, a.priority, a.retry_count, a.create_time,
                   a.handler_log_path, a.dist_type, a.event_rule, b.job_name, b.admin, b.admin_phone, b.admin_email,
                   b.handler_fail_strategy, b.crontab
            FROM job_event a, job_info b
            WHERE a.job_id=b.id
        ]]>
        <choose>
            <when test="groupId != null and groupId != ''">
                AND group_id = #{groupId}
            </when>
            <otherwise>
                AND event_id = #{eventId}
            </otherwise>
        </choose>
    </select>

    <select id="queryChildJobEventVo" parameterType="string" resultMap="JobEventVoMap">
        <![CDATA[
            SELECT a.event_id, a.parent_event_id, a.job_id, a.parent_job_id, a.group_id, a.parent_group_id, a.executor_handlers,
                   a.handler_type, a.cmd, a.params, a.param_file_path, a.stat, a.handler_agent_id, a.priority, a.retry_count, a.create_time,
                   a.handler_log_path, a.dist_type, a.event_rule, b.job_name, b.admin, b.admin_phone, b.admin_email,
                   b.handler_fail_strategy, b.crontab
            FROM job_event a, job_info b
            WHERE a.job_id=b.id
        ]]>
        <choose>
            <when test="events != null and events != '' and groups != null and groups != ''">
                AND (FIND_IN_SET(a.parent_event_id, #{events}) OR FIND_IN_SET(a.parent_group_id, #{groups}))
            </when>
            <when test="events != null and events != ''">
                AND FIND_IN_SET(a.parent_event_id, #{events})
            </when>
            <otherwise>
                AND FIND_IN_SET(a.parent_group_id, #{groups})
            </otherwise>
        </choose>
    </select>

    <update id="rehandleFailedEvent" parameterType="string">
        <![CDATA[
            UPDATE job_event SET stat = 'READY', retry_count = retry_count + 1 WHERE event_id = #{eventId} AND stat = 'FAIL'
        ]]>
    </update>

    <update id="updateEventPriority" parameterType="org.sam.shen.scheduing.entity.JobEvent">
        <![CDATA[
            UPDATE job_event SET priority = #{priority} WHERE event_id = #{eventId} AND (stat = 'FAIL' OR stat = 'READY' OR stat = 'WAIT')
        ]]>
    </update>

    <update id="updateChildEventStatus">
        <![CDATA[
            UPDATE job_event SET stat = #{stat} WHERE parent_event_id = #{pid}
        ]]>
    </update>

    <update id="activateChildEventByGroupId">
        <![CDATA[
            UPDATE job_event SET stat = 'READY' WHERE parent_group_id = #{groupId} AND stat = 'WAIT'
        ]]>
    </update>
    
    <select id="findSubeventsByPid" parameterType="string" resultMap="jobEventMap">
        <![CDATA[
            SELECT event_id, parent_event_id, job_id, parent_job_id, group_id, parent_group_id, executor_handlers,
                   handler_type, cmd, params, param_file_path, stat, handler_agent_id, priority, retry_count, create_time, handler_log_path,
                   dist_type, event_rule
            FROM job_event WHERE parent_event_id = #{pid}
        ]]>
    </select>

    <select id="findSubeventsByParentGroupId" parameterType="string" resultMap="jobEventMap">
        <![CDATA[
            SELECT event_id, parent_event_id, job_id, parent_job_id, group_id, parent_group_id, executor_handlers,
                handler_type, cmd, params, param_file_path, stat, handler_agent_id, priority, retry_count, create_time, handler_log_path,
                dist_type, event_rule
            FROM job_event WHERE parent_group_id = #{pid}
        ]]>
    </select>
    
    <select id="checkGroupComplete" parameterType="string" resultType="java.lang.Integer">
        <![CDATA[
            SELECT count(event_id) FROM job_event WHERE group_id = #{groupId} AND stat <> 'SUCCESS'
        ]]>
    </select>

    <select id="findJobEventByGroupId" parameterType="string" resultMap="jobEventMap">
        <![CDATA[
            SELECT event_id, parent_event_id, job_id, parent_job_id, group_id, parent_group_id, executor_handlers,
                handler_type, cmd, params, param_file_path, stat, handler_agent_id, priority, retry_count, create_time, handler_log_path,
                dist_type, event_rule
            FROM job_event WHERE group_id = #{groupId}
        ]]>
    </select>
</mapper>