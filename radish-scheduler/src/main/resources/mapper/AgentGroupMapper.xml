<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Mapper接口 -->
<mapper namespace="org.sam.shen.scheduing.mapper.AgentGroupMapper">
    <resultMap type="AgentGroup" id="agentGroupMap">
        <result column="id" property="id"/>
        <result column="group_name" property="groupName"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="findAgentGroupById" parameterType="long" resultMap="agentGroupMap">
        <![CDATA[
            SELECT id, group_name, create_time FROM agent_group WHERE id = #{id}
        ]]>
    </select>

    <insert id="saveAgentGroup" parameterType="AgentGroup" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
            INSERT INTO agent_group(group_name, create_time) VALUES (#{groupName}, #{createTime})
        ]]>
    </insert>

    <select id="queryAgentGroup" resultMap="agentGroupMap">
        <![CDATA[
            SELECT id, group_name, create_time FROM agent_group
        ]]>
    </select>

    <select id="queryUserAgentGroup" parameterType="java.lang.Long" resultMap="agentGroupMap">
        SELECT b.id, b.group_name, b.create_time
        FROM user_agent_group a, agent_group b
        WHERE a.group_id = b.id AND a.user_id = #{userId}
    </select>

    <select id="queryAgentGroupByName" parameterType="java.lang.String" resultMap="agentGroupMap">
        SELECT id, group_name, create_time FROM agent_group
        <where>
            <if test="groupName != null and groupName != ''">group_name like concat('%', concat(#{groupName}, '%'))</if>
        </where>
    </select>
    
    <select id="countAgentGroup" resultType="long">
        <![CDATA[
            SELECT count(ag.id) cnt FROM agent_group ag left join user_agent_group uag on ag.id=uag.group_id
        ]]>
        <where>
            <if test="userId != null">user_id = #{userId}</if>
        </where>
    </select>
    
    <update id="upgradeAgentGroup" parameterType="AgentGroup">
        <![CDATA[
            UPDATE agent_group SET group_name = #{groupName}, create_time = #{createTime} WHERE id = #{id}
        ]]>
    </update>
    
    <delete id="deleteAgentGroup" parameterType="long">
        <![CDATA[
            DELETE ag, agr FROM agent_group ag left join agent_group_ref agr on ag.id = agr.agent_group_id where ag.id = #{id}
        ]]>
    </delete>

</mapper>